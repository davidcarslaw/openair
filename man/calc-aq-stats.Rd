% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calcAQStats.R
\name{calcAQStats}
\alias{calcAQStats}
\alias{aqStat}
\title{Calculate user-defined air quality statistics}
\usage{
calcAQStats(mydata, aqstats, period = c("year"), progress = TRUE)

aqStat(
  pollutant = "no2",
  stat = c("mean", "min", "median", "max", "percentile", "limit"),
  avg.time = "hour",
  limit = NA,
  percentile = NA,
  roll.width = NA,
  roll.avg.time = NA,
  roll.avg.stat = "max",
  name = NULL
)
}
\arguments{
\item{mydata}{A data frame of time series. Must include a \code{date} field and
any variables required by the provided \code{aqstats}.}

\item{aqstats}{A list of \code{\link[=aqStat]{aqStat()}} objects to calculate.}

\item{period}{A time period to calculate statistics for. Currently, only
\code{"year"} is supported, which will calculate annual statistics.}

\item{progress}{Show a progress bar when large numbers of statistics are
being calculated? Defaults to \code{TRUE}.}

\item{pollutant}{The pollutant (or other named variable) of interest, e.g.,
\code{"no2"}. This should align with a column name in the \code{data.frame} passed to
\code{\link[=calcAQStats]{calcAQStats()}}.}

\item{stat}{The grand statistic to calculate. Simple statistics include
\code{"mean"} (the default), \code{"min"}, \code{"median"} or \code{"max"}. Can also be
\code{"percentile"}, the percentile being defined using the \code{percentile} option.
Finally, can be \code{"limit"}, which compares values against the \code{limit} value
and returns the number of instances where the value exceeds the limit.}

\item{avg.time}{An initial averaging time to calculate \emph{before} the \code{stat} is
calculated; passed directly to \code{\link[=timeAverage]{timeAverage()}}.}

\item{limit}{The limit value, for \code{stat = "limit"}.}

\item{percentile}{The percentile value, for \code{stat = "percentile"}.}

\item{roll.width}{If an integer value is provided, a rolling mean will be
calculated \emph{after} time averaging and before \emph{stat}. For example, to
calculate an 8-hour rolling mean set \verb{avg.time = "1 hour", roll = 8L}.}

\item{roll.avg.time, roll.avg.stat}{If \code{roll.width} is specified, users can
additionally set \code{roll.avg.time} and \code{roll.avg.stat} to time average the
rolling mean values using \code{\link[=timeAverage]{timeAverage()}}. This could be useful to
calculate a \emph{max} daily running 8 hour mean to compare with an ozone limit,
for example.}

\item{name}{Optionally change the output column name for this air quality
statistic.}
}
\description{
\code{\link[=calcAQStats]{calcAQStats()}} calculates user-defined annual air-quality statistics
constructed using \code{\link[=aqStat]{aqStat()}}. This pair of functions allows users to flexibly
define air quality statistics and limits relevant to their local air quality
legislation and quickly track compliance.
}
\section{Data Transformation Pipeline}{


\code{\link[=calcAQStats]{calcAQStats()}} does \emph{a lot} in one go, so it is worth outlining the order
of proceedings:
\itemize{
\item First, the data is time-averaged using \code{avg.time}. This is passed
straight to \code{\link[=timeAverage]{timeAverage()}}. For hourly data and the default \code{avg.time} of
\code{"hour"}, effectively nothing happens at this stage.
\item Second, if \code{roll.width} is specified, a rolling mean is calculated
using \code{\link[=rollingMean]{rollingMean()}}. Typically this should be combined with \code{avg.time =   "hour"} to ensure \emph{hourly} data is rolled. Most likely, \code{roll.width} will
be \code{8L} (for ozone & carbon monoxide) or \code{24L} (for particulates).
\item If \code{roll.avg.time} is set, the average rolled values will then
themselves be averaged. \code{roll.avg.stat} defaults to \code{"max"}, which is
expected to be the most useful for almost all applications. These options
are likely only useful when \code{stat = "limit"} to compare complex statistics
like "daily max rolling 8-hour mean ozone" with a limit value.
\item Next, the \code{stat} is used to calculate a \code{period} (by default, annual)
statistic. If \code{stat != "limit"} this, again, is passed straight to
\code{\link[=timeAverage]{timeAverage()}}. If \code{stat == "limit"}, each value is checked against the
\code{limit} and the number of values exceeding the limit are returned.
}
}

\examples{
# calculate some UK AQ limits
calcAQStats(
  mydata = openair::mydata,
  aqstats = list(
    # PM10 limits
    aqStat("pm10", "limit", "day", limit = 50),
    aqStat("pm10", "limit", "year", limit = 40),
    # NO2 limits
    aqStat("no2", "limit", "hour", limit = 200),
    aqStat("no2", "limit", "year", limit = 40),
    # O3 limit
    aqStat("o3", "limit", "hour", roll = 8L, limit = 100),
    # SO2 limits
    aqStat("so2", "limit", "15 min", limit = 266),
    aqStat("so2", "limit", "hour", limit = 350),
    aqStat("so2", "limit", "day", limit = 125),
    # CO limits
    aqStat("co", "limit", "hour", roll = 8L, roll.avg.time = "day", limit = 10)
  ),
  period = "year"
)
}
\seealso{
\code{\link[=aqStats]{aqStats()}}, for a simpler but more prescriptive way of calculating
air quality statistics
}
\author{
Jack Davison
}
